#!/usr/bin/env python3

import re
import os
import sys
import subprocess
from colorama import init, Fore, Back, Style

init()

args = ['latex', '-halt-on-error'] + sys.argv[1:]

env = {'max_print_line': '9'*14}
env.update(os.environ)

try:
    output = subprocess.check_output(args, env=env)
except subprocess.CalledProcessError as e:
    output = e.output
    return_code = e.returncode
else:
    return_code = 0

# Garbage
output = re.sub(b'\n\([^)]*\) *(?= )', b'', output)
# algorithm2e
output = re.sub(b"\**\nPackage .algorithm2e'.*(\n[^*]*)*\n\**\n", b'', output,
        re.MULTILINE ^ re.DOTALL)

WARNING = re.compile('^(Package (?P<package>[^ ]*)|LaTeX ((?P<latextype>[^ ]*) )?)Warning: (?P<message>.*)$')

for line in output.split(b'\n\n', 1)[-1].split(b'\n'):
    if b'/usr/share' in line:
        continue
    if line.endswith(b')))))'):
        continue
    if line.startswith(b'Package hyperref Message: Driver'):
        continue
    line = line.decode('iso-8859-1')
    if not line.strip(' \t\n()'):
        print(Fore.RESET + Back.RESET + Style.RESET_ALL)
        continue
    warning = WARNING.match(line)
    if warning:
        line = ''.join([Fore.YELLOW,
            warning.group('package') or warning.group('latextype') or 'LaTeX',
            Style.DIM, ': ', warning.group('message')])
    if line.startswith(('Overfull', 'Underfull')):
        print(''.join([Fore.RED, line.strip(), Fore.RESET, Style.DIM]))
        continue
    sys.stdout.write(line)
    sys.stdout.write('\n')

exit(return_code)
